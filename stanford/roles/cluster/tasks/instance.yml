- name: Create new instance
  ec2:
    key_name: "{{ CLUSTER_KEY }}"
    instance_type: "{{ CLUSTER_INSTANCE_TYPE }}"
    image: "{{ CLUSTER_AMI }}"
    wait: yes
    count: 1
    vpc_subnet_id: "{{ cluster_subnet.subnet.id }}"
    assign_public_ip: "{{ CLUSTER_ASSIGN_PUBLIC_IP }}"
    instance_tags:
      Birthday: "{{ lookup('pipe', \"date -u +'%Y-%m-%d %H:%M:%S'\") }}"
      Cluster: "{{ CLUSTER_NAME }}"
      Deployment: "{{ COMMON_DEPLOYMENT }}"
      Name: "{{ COMMON_DEPLOYMENT }}-box-{{ CLUSTER_NAME }}-{{ CLUSTER_NUMBER }}"
      Number: "{{ CLUSTER_NUMBER }}"
      todo: deploy
    groups: "{{ CLUSTER_SECURITY_GROUPS }}"
    region: "{{ CLUSTER_REGION }}"
    volumes:
      - device_name: /dev/sda1
        volume_size: "{{ CLUSTER_EBS_SIZE }}"
        volume_type: gp2
        delete_on_termination: true
  register: ec2
- debug:
    var: item
  with_items: "{{ ec2.instances | default([])}}"
- name: Add new instance to host group
  add_host:
    name: "{{ item.public_ip }}"
    groups:
      - cluster_group_launched
      - tag_todo_deploy
      - "tag_Deployment_{{ COMMON_DEPLOYMENT }}"
      - "tag_Cluster_{{ CLUSTER_NAME }}"
      - "tag_Number_{{ CLUSTER_NUMBER }}"
  with_items: "{{ ec2.instances | default([])}}"
  when:
    - item.public_ip
- name: Add new instance to host group
  add_host:
    name: "{{ item.private_ip }}"
    groups:
      - cluster_group_launched
      - tag_todo_deploy
      - "tag_Deployment_{{ COMMON_DEPLOYMENT }}"
      - "tag_Cluster_{{ CLUSTER_NAME }}"
      - "tag_Number_{{ CLUSTER_NUMBER }}"
  with_items: "{{ ec2.instances | default([])}}"
  when:
    - not item.public_ip
- name: Wait for SSH to come up
  wait_for:
    host: "{{ item.public_ip | default(item.private_ip) }}"
    port: 22
    delay: 20
    timeout: 120
  with_items: "{{ ec2.instances | default([])}}"
  ignore_errors: yes
  register: command
  # failed_when: command.rc != 0 and CLUSTER_NAME != 'deploy'
- debug: var=command
