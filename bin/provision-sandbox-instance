#!/usr/bin/env python
import argparse
import time

from boto.exception import EC2ResponseError

from openedx_configuration.lib import *


DESCRIPTION_SECURITY_GROUP = 'Blah blah blah'


def create(arguments):
    environment = arguments.environment
    vpc_cidr_block = arguments.vpc_cidr_block
    vpc = lookup_vpc(
        environment,
        vpc_cidr_block,
    )
    vpc_id = vpc.id
    subnet = lookup_subnet(vpc, environment, generate_name_subnet(vpc), arguments.subnet_cidr_block)
    name_security_group = generate_name_security_group(vpc)
    security_group = lookup_security_group(vpc, name_security_group, DESCRIPTION_SECURITY_GROUP)
    print(vpc_id, subnet, security_group)
    instance = create_instance(
        arguments.instance_name,
        arguments.environment,
        arguments.role,
        security_group.id,
        subnet.id,
        disk_size=arguments.disk_size,
    )
    while instance.state == 'pending':
        print(instance.state, instance)
        time.sleep(5)
        instance.update()
    print(instance.ip_address)
    print(instance.public_dns_name)


if __name__ == '__main__':
    parser = argparse.ArgumentParser(
        description='Whatever, man',
    )
    parser.add_argument(
        '-n',
        '--instance-name',
        help='breath life with a name',
        required=True,
    )
    parser.add_argument(
        '-e',
        '--environment',
        help='?',
        default='sandbox',
    )
    parser.add_argument(
        '-r',
        '--role',
        help='?',
        default='sandbox',
    )
    parser.add_argument(
        '-s',
        '--subnet-cidr-block',
        help='?',
        default='10.4.0.0/24',
    )
    parser.add_argument(
        '-V',
        '--vpc-cidr-block',
        help='?',
        default='10.4.0.0/16',
    )
    parser.add_argument(
        '-d',
        '--disk-size',
        help='what size EBS volume',
        default=16,
    )
    arguments = parser.parse_args()
    # print(arguments)
    create(arguments)
