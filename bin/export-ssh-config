#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
Generate an ~/.ssh/config file for a VPC environment.

If a jumpbox exists at `jump.${environment}` in the VPC,
forward connections through it.
"""
import argparse


def parse_arguments():
    parser = argparse.ArgumentParser(
        description=__doc__,
    )
    parser.add_argument(
        '-e',
        '--environment',
        help=(
            'one of [sandbox, stage, lagunita, suclass, cme, etc], '
            'defaults to all'
        ),
        default=None,
    )
    parser.add_argument(
        '-u',
        '--username',
        help='probably your Github username',
        required=True,
    )
    arguments = parser.parse_args()
    return arguments


def main(arguments):
    connection_vpc = VPCConnection()
    connection_ec2 = EC2Connection()
    if arguments.environment:
        vpcs = [
            Vpc(arguments.environment)
        ]
    else:
        vpcs = Vpc.get_all()
    print('Host *')
    print('    ForwardAgent yes')
    print('    User {username}'.format(username=arguments.username))
    for vpc in vpcs:
        vpc_name = vpc.name
        if vpc_name.endswith('-vpc'):
            vpc_name = vpc_name[:-4]
        print('')
        instances = connection_ec2.get_only_instances(
            filters={
                'vpc-id': vpc.id,
            },
        )
        jumpbox = [
            instance
            for instance in instances
            if instance.tags.get('Name', '').startswith('jumpbox.')
        ]
        if len(jumpbox):
            jumpbox = jumpbox[0]
        for instance in instances:
            name = instance.tags.get('Name', '')
            if not name:
                continue
            if jumpbox and jumpbox.id != instance.id:
                jumpbox_name = 'jump.' + vpc_name
                print('Host ' + name)
                print('    ProxyCommand ssh -W ' + instance.private_ip_address + ':%p ' + jumpbox_name)
            elif jumpbox:
                name = 'jump.' + vpc_name
                print('Host ' + name)
                print('    HostName ' + jumpbox.ip_address)
            else:
                print('Host ' + name)
                print('    HostName ' + instance.ip_address)


if __name__ == '__main__':
    arguments = parse_arguments()
    main(arguments)
