---
#
# edX Configuration
#
# github:     https://github.com/edx/configuration
# wiki:       https://github.com/edx/configuration/wiki
# code style: https://github.com/edx/configuration/wiki/Ansible-Coding-Conventions
# license:    https://github.com/edx/configuration/blob/master/LICENSE.TXT
#
#
#
# Tasks for role edx_vpc
# 
# Overview:
# This role creates an opinionated vpc for containing cluster of edx services.
# 
# It currently assumes that we will be multi-az, with a single NAT, and all
# traffic going over that NAT.  A public subnet, and both public and private
# route tables are created by default that can be used by new services in this
# vpc.  The public subnet should house ELBs and any newly created private subnets
# can use the existing private route table to be able to reach the internet from
# private machines.
# 
#
# Example play:
#
# ansible-playbook -c local -i localhost, edx_vpc.yml -e@/Users/feanil/src/edx-secure/cloud_migrations/vpcs/test.yml

# DO NOT use the subnet or route table sections of this command.
# They will delete any subnets or rts not defined here which is
# probably not what you want, since other services were added
# to the vpc whose subnets and rts are not enumerated here.
- name: create a vpc
  local_action:
    profile: "{{ vpc_aws_profile }}"
    module: "ec2_vpc_local"
    resource_tags: "{{ vpc_vpc_tags }}"
    cidr_block: "{{ vpc_vpc_cidr }}"
    region: "{{ vpc_aws_region }}"
    state: "{{ vpc_vpc_state }}"
    internet_gateway: "{{ vpc_vpc.internet_gateway.create }}"
    internet_gateway_tags: "{{ vpc_vpc.internet_gateway.tags }}"
    wait: yes
  register: created_vpc
  tags: vpc_only

- debug:
    var: created_vpc

# A default network acl is created when a vpc is created so each VPC
# should have one but we create one here that allows access to the
# outside world using the internet gateway.
- name: create public network acl
  ec2_acl:
    profile: "{{ vpc_aws_profile }}"
    name: "{{ vpc_acl_public.name }}"
    vpc_id: "{{ created_vpc.vpc_id }}"
    state: "present"
    region: "{{ vpc_aws_region }}"
    rules: "{{ vpc_acl_public.rules }}"
    tags:
      - key: Deployment
        value: "{{ DEPLOYMENT }}"
  register: created_public_acl
  when: created_vpc.changed

- name: create public route table
  ec2_rt:
    profile: "{{ vpc_aws_profile }}"
    vpc_id: "{{ created_vpc.vpc_id }}"
    region: "{{ vpc_aws_region }}"
    state: "present"
    name: "{{ vpc_routes_public.name }}"
    routes: "{{ vpc_routes_public.routes }}"
    tags:
      - key: Deployment
        value: "{{ DEPLOYMENT }}"
  register: created_public_rt

- debug:
    var: created_public_rt

- name: create public subnets
  ec2_subnet:
    profile: "{{ vpc_aws_profile }}"
    vpc_id: "{{ created_vpc.vpc_id }}"
    region: "{{ vpc_aws_region }}"
    state: "present"
    name: "{{ item.name }}"
    cidr: "{{ item.cidr }}"
    az: "{{ item.az }}"
    route_table_id: "{{ created_public_rt.id }}"
    network_acl_id: "{{ created_public_acl.id }}"
    tags:
      - key: Deployment
        value: "{{ DEPLOYMENT }}"
  with_items: vpc_public_subnets
  register: created_public_subnets

- debug:
    var: created_public_subnets

- include: nat.yml
  vars:
    created_vpc: "{{ created_vpc }}"

- include: jump.yml
  vars:
    created_vpc: "{{ created_vpc }}"

- name: create private route table
  ec2_rt:
    profile: "{{ vpc_aws_profile }}"
    vpc_id: "{{ created_vpc.vpc_id }}"
    region: "{{ vpc_aws_region }}"
    state: "present"
    name: "{{ vpc_routes_private.name }}"
    routes: "{{ vpc_routes_private.routes }}"
  register: created_private_rt

- debug:
    var: created_private_rt

# Sandboxes
# - name: create private network acl for sandbox
#   ec2_acl:
#     profile: "{{ vpc_aws_profile }}"
#     name: "{{ vpc_acl_sandbox.name }}"
#     vpc_id: "{{ created_vpc.vpc_id }}"
#     state: "present"
#     region: "{{ vpc_aws_region }}"
#     rules: "{{ vpc_acl_sandbox.rules }}"
#     tags:
#       - key: Deployment
#         value: "{{ DEPLOYMENT }}"
#   register: created_acl_sandbox

- name: create security group for sandboxes
  local_action:
    module: ec2_group_local
    profile: "{{ vpc_aws_profile }}"
    vpc_id: "{{ created_vpc.vpc_id }}"
    state: "present"
    region: "{{ vpc_aws_region }}"
    name: "{{ vpc_group_sandbox.name }}"
    rules: "{{ vpc_group_sandbox.rules }}"
    description: "{{ vpc_group_sandbox.description }}"
    rules_egress: "{{ vpc_group_sandbox.rules_egress }}"
    tags:
      - key: Deployment
        value: "{{ DEPLOYMENT }}"
      - key: Name
        value: "{{ vpc_group_sandbox.name }}"
  register: create_group_sandbox

- debug:
    var: create_group_sandbox

# - name: create subnet sandbox
#   ec2_subnet:
#     profile: "{{ vpc_aws_profile }}"
#     vpc_id: "{{ created_vpc.vpc_id }}"
#     region: "{{ vpc_aws_region }}"
#     state: "present"
#     name: "{{ vpc_subnet_sandbox.name }}"
#     cidr: "{{ vpc_subnet_sandbox.cidr }}"
#     az: "{{ vpc_subnet_sandbox.az }}"
#     route_table_id: "{{ created_private_rt.id }}"
#     network_acl_id: "{{ created_acl_sandbox.id }}"
#     tags:
#       - key: Deployment
#         value: "{{ DEPLOYMENT }}"
#   register: create_subnet_sandbox
# 
# - debug:
#     var: create_subnet_sandbox
